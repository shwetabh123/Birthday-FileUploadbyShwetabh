{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contacts/contacts.component.ts","webpack:///src/app/contacts/contacts.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/images/image-list/image-list.component.ts","webpack:///src/app/images/image-list/image-list.component.html","webpack:///src/app/images/image/image.component.ts","webpack:///src/app/images/image/image.component.html","webpack:///src/app/images/images.component.ts","webpack:///src/app/images/images.component.html","webpack:///src/app/shared/contact.service.ts","webpack:///src/app/shared/image.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","ContactsComponent","contactService","resetForm","refreshAddressList","form","reset","contact","_id","FirstName","LastName","DOB","AnniversaryDate","Address","Phone","Email","getAddress","subscribe","res","contacts","emp","value","postAddress","M","toast","html","classes","putAddress","confirm","deleteAddress","onSubmit","HomeComponent","ImageListComponent","service","imageDetailList","snapshotChanges","list","imageList","map","item","payload","val","rawIndexArray","Array","from","Math","ceil","length","ImageComponent","storage","formTemplate","caption","required","category","imageUrl","event","target","files","reader","FileReader","onload","imgSrc","result","readAsDataURL","selectedImage","formValue","isSubmitted","valid","filePath","name","split","splice","join","Date","getTime","fileRef","ref","upload","pipe","getDownloadURL","url","insertImageDetails","setValue","showPreview","ImagesComponent","getImageDetailList","ContactService","http","get","json","post","put","providedIn","ImageService","firebase","imageDetails","push","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ImagesComponent } from './images/images.component';\nimport { ImageComponent } from './images/image/image.component';\nimport { ImageListComponent } from './images/image-list/image-list.component';\n\nimport { ContactsComponent } from './contacts/contacts.component';\n\nconst routes: Routes = [\n\n  \n \n\n  {path:'',redirectTo:'',  pathMatch: 'full'}, \n{\n\n  path:'image',component:ImagesComponent,children:[\n \n    {path:'upload',component:ImageComponent   },//image/upload\n {path:'list', component:ImageListComponent}//image/list\n\n]\n},\n{ path:  'contacts', component:ContactsComponent},\n\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'Welcome to Sai Family';\n}\n","\r\n<html>\r\n    <body style=\"background-color:#ff69b4;\">\r\n\r\n<h1 style=\"color:black; font-size: 300%\" style=\"text-align:center\">Welcome to Sai Family</h1>\r\n\r\n    <table>\r\n        <tr>\r\n            <td>\r\n\r\n                <a routerLink=\"/\" style=\" color:  #083045; font-weight:bold;font-size: 150%\" class=\"waves-effect waves-purple btn secondary-content\" >Home</a>\r\n            \r\n            </td>\r\n\r\n            <td>\r\n                <a routerLink=\"contacts\" style=\"color:  #083045;font-weight:bold; font-size: 150%\" class=\"waves-effect waves-purple btn secondary-content\">Contacts List</a>\r\n            </td>\r\n            <td>\r\n                <a routerLink=\"image/upload\" style=\" color:  #083045; font-weight:bold; font-size: 150%\" class=\"waves-effect waves-purple btn secondary-content\">Image Upload </a>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n\r\n</body>\r\n</html>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<router-outlet></router-outlet>\r\n\r\n\r\n<!-- <app-contacts></app-contacts>   -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport {AngularFireModule} from '@angular/fire';\nimport {AngularFireStorageModule} from '@angular/fire/storage';\n\nimport {AngularFireDatabaseModule} from '@angular/fire/database';\nimport { ReactiveFormsModule       }  from '@angular/forms';\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ImagesComponent } from './images/images.component';\nimport { ImageComponent } from './images/image/image.component';\nimport { ImageListComponent } from './images/image-list/image-list.component';\nimport { environment } from \"../environments/environment\";\n\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { HomeComponent } from './home/home.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactsComponent,\n    ImagesComponent,\n    ImageComponent,\n    ImageListComponent,\n    ContactsComponent,\n    HomeComponent,\n \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireStorageModule,\n    AngularFireDatabaseModule,\n    ReactiveFormsModule\n\n\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ContactService } from 'src/app/shared/contact.service';\nimport { Contact } from 'src/app/shared/contact';\n\n\nimport { NgForm } from '@angular/forms';\n\ndeclare var M: any;\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css'],\n  providers: [ContactService]\n})\nexport class ContactsComponent implements OnInit {\n  \n//    contacts: Contact[]=[];\n//    contact: Contact;\n\n//    _id : String;\n// FirstName:String;\n// LastName:String;\n// DOB:String;\n// AnniversayDate:String;\n// Address:String;\n// Phone:String;\n// Email:String;\n\n  constructor(public contactService: ContactService) { }\n  \n  ngOnInit() {\n    this.resetForm();\n    this.refreshAddressList();\n  }\n\n\n\n  resetForm(form?: NgForm) {\n    if (form)\n      form.reset();\n    this.contactService.contact = {\n      _id : \"\",\n        FirstName:\"\",\n        LastName:\"\",\n        DOB:\"\",\n        AnniversaryDate:\"\",\n        Address:\"\",\n        Phone:\"\",\n        Email:\"\"  \n\n\n    \n\n    }\n  }\n\n  refreshAddressList() {\n    this.contactService.getAddress().subscribe((res) => {\n      this.contactService.contacts = res as Contact[];\n    });\n  }\n\n  onEdit(emp: Contact) {\n    this.contactService.contact = emp;\n  }\n\n\n  onSubmit(form: NgForm) {\n    if (form.value._id == \"\") {\n      this.contactService.postAddress(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshAddressList();\n        M.toast({ html: 'Saved successfully', classes: 'rounded' });\n      });\n    }\n    else {\n      this.contactService.putAddress(form.value).subscribe((res) => {\n         this.resetForm(form);\n        this.refreshAddressList();\n        M.toast({ html: 'Updated successfully', classes: 'rounded' },4000);\n      });\n    }\n  }\n\n\n  \n\n\n  // addAddress() {\n  //   const newContact = {\n  //     FirstName: this.FirstName,\n  //     LastName: this.LastName,\n  //     DOB: this.DOB, \n  //     AnniversayDate:this.AnniversayDate,\n  //     Address:this.Address,\n  //     Phone: this.Phone,\n  //     Email: this.Email,\n     \n  //   }\n  //   this.contactService.addAddress(newContact)\n  //     .subscribe(contact => {\n  //       this.contacts.push(contact);\n  //       this.contactService.getAddress()\n  //     .subscribe(contacts =>\n  //       this.contacts = contacts);\n  //     });\n  // }\n\n\n  onDelete(_id: string, form: NgForm) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.contactService.deleteAddress(_id).subscribe((res) => {\n        this.refreshAddressList();\n        this.resetForm(form);\n        M.toast({ html: 'Deleted successfully', classes: 'rounded' });\n      });\n    }\n\n\n\n\n    //old working code\n\n\n  // deleteAddress(id: any) {\n  //   var contacts = this.contacts;\n  //   this.contactService.deleteAddress(id)\n  //     .subscribe(data => {\n  //       if (data.m == 1) {\n  //         for (var i = 0; i < contacts.length; i++) {\n  //           if (this.contacts[i]._id == id) {\n  //             contacts.splice(i, 1);\n  //           }\n  //         }\n  //       }\n  //       this.contactService.getAddress()\n  //     .subscribe(contacts =>\n  //       this.contacts = contacts);\n  //     })\n  // }\n  // ngOnInit(): void {\n  //   this.resetForm();\n  //   this.refreshEmployeeList();\n  //   this.contactService.getAddress()\n  //     .subscribe(contacts =>\n  //       this.contacts = contacts);\n  // }\n}}","\n\n<div class=\"row\">\n    <div class=\"col s12\">\n      <div class=\"card\">\n        <div class=\"card-content white-text\">\n          <div class=\"row\">\n            <div class=\"col s5\">\n              <form #employeeForm=\"ngForm\" (ngSubmit)=\"onSubmit(employeeForm)\">\n                <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"contactService.contact._id\">\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input style=\"font-size:15px;\" type=\"text\" name=\"FirstName\" #name=\"ngModel\" [(ngModel)]=\"contactService.contact.FirstName\" placeholder=\"Enter First name\" required>\n                    <label style=\"font-size:20px;\">FirstName :\n                      <label class=\"red-text\">*</label>\n                    </label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input style=\"font-size:15px;\" type=\"text\" name=\"LastName\" #name=\"ngModel\" [(ngModel)]=\"contactService.contact.LastName\" placeholder=\"Enter Last name\">\n                    <label style=\"font-size:20px;\">LastName :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input style=\"font-size:15px;\" type=\"text\" name=\"DOB\" #name=\"ngModel\" [(ngModel)]=\"contactService.contact.DOB\" placeholder=\"Enter DOB\">\n                    <label style=\"font-size:20px;\">DOB :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input style=\"font-size:15px;\" type=\"text\" name=\"AnniversaryDate\" #name=\"ngModel\" [(ngModel)]=\"contactService.contact.AnniversaryDate\" placeholder=\"Enter Anniversary Date\">\n                    <label style=\"font-size:20px;\">Anniversary Date :</label>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                      <input style=\"font-size:15px;\" type=\"text\" name=\"Address\" #name=\"ngModel\" [(ngModel)]=\"contactService.contact.Address\" placeholder=\"Enter Address\">\n                      <label style=\"font-size:20px;\">Address :</label>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                      <input style=\"font-size:15px;\" type=\"text\" name=\"Phone\" #name=\"ngModel\" [(ngModel)]=\"contactService.contact.Phone\" placeholder=\"Enter Phone\">\n                      <label style=\"font-size:20px;\">Phone :</label>\n                    </div>\n                  </div>\n\n\n                  <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                      <input style=\"font-size:15px;\" type=\"text\" name=\"Email\" #name=\"ngModel\" [(ngModel)]=\"contactService.contact.Email\" placeholder=\"Enter Email\">\n                      <label style=\"font-size:20px;\">Email :</label>\n                    </div>\n                  </div>\n\n\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <button style=\"height:40px;width:120px\" class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(employeeForm)\">Reset</button>\n                    <button  style=\"height:40px;width:120px\"  class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!employeeForm.valid\">Submit</button>\n                  \n                \n                \n<!-- <input style=\"height:40px;width:120px\" type=\"submit\" (click)=\"addAddress()\"   class=\"btn btn-success\" value =\"Add\"> -->\n\n                </div>\n                </div>\n              </form>\n            </div>\n            <div class=\"col s7\">\n                <table class=\"responsive-table highlight\">\n                    <thead>\n                      <tr>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>DOB</th>\n                        <th>AnniversaryDate</th>\n                        <th>Address</th>\n                        <th>Phone</th>\n                        <th>Email</th>\n            \n                        <th></th>\n                      </tr>\n                    </thead>\n\n                    <tr *ngFor=\"let emp of contactService.contacts\">\n                    <!-- <tr *ngFor=\"let emp of employeeService.employees\"> -->\n                        <td>{{emp.FirstName}}</td>\n                        <td>{{emp.LastName}}</td>\n                        <td>{{emp.DOB}}</td>\n                        <td>{{emp.AnniversaryDate}}</td>\n                        <td>{{emp.Address}}</td>\n                        <td>{{emp.Phone}}</td>\n                        <td>{{emp.Email}}</td>\n                      <td>\n                          <a class=\"action-btn\" (click)=\"onEdit(emp)\">\n                            <i class=\"material-icons\">edit</i>\n                          </a>\n                          <a class=\"action-btn\" (click)=\"onDelete(emp._id,employeeForm)\">\n                            <i class=\"material-icons\">delete</i>\n\n                            \n                          </a>\n                        </td>\n                    </tr>\n                  </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n  </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- \n\n<div class=\"container\" >\n    <h2 class =\"page-header\">Sai Family - Add Contact</h2>\n <form (submit) =\"addAddress()\">\n      \n    <div class =\"form-group\">\n    <label style=\"font-size:15px;\"> First Name</label>\n    <input  style=\"font-size:25px;\" type=\"text\"   [(ngModel)]=\"FirstName\" name=\"FirstName\" class=\"form-control\">\n</div>\n<div class =\"form-group\">\n    <label style=\"font-size:15px;\"> Last Name</label>\n    <input style=\"font-size:25px;\" type=\"text\" [(ngModel)]=\"LastName\" name=\"LastName\" class=\"form-control\">\n</div>\n<div class =\"form-group\">\n    <label style=\"font-size:15px;\"> DOB</label>\n    <input style=\"font-size:25px;\" type=\"text\" [(ngModel)]=\"DOB\" name=\"DOB\" class=\"form-control\">\n</div>\n<div class =\"form-group\">\n    <label style=\"font-size:15px;\"> Anniversay Date</label>\n    <input style=\"font-size:25px;\" type=\"text\" [(ngModel)]=\"AnniversayDate\" name=\"AnniversayDate\" class=\"form-control\">\n</div>\n<div class =\"form-group\">\n    <label style=\"font-size:15px;\"> Address</label>\n    <input style=\"font-size:25px;\" type=\"text\" [(ngModel)]=\"Address\" name=\"Address\" class=\"form-control\">\n</div>\n<div class =\"form-group\">\n    <label style=\"font-size:15px;\"> Phone</label>\n    <input style=\"font-size:25px;\" type=\"text\" [(ngModel)]=\"Phone\" name=\"Phone\" class=\"form-control\">\n</div>\n<div class =\"form-group\">\n    <label style=\"font-size:15px;\"> Email</label>\n    <input style=\"font-size:25px;\" type=\"text\" [(ngModel)]=\"Email\" name=\"Email\" class=\"form-control\">\n</div>\n\n<input style=\"height:40px;width:120px\" type=\"submit\" (click)=\"addAddress()\"   class=\"btn btn-success\" value =\"Add\">\n\n\n </form>\n</div>\n<hr>\n\n\n\n\n\n<div class=\"col s7\">\n    <table class=\"responsive-table highlight\">\n        <thead>\n          <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>DOB</th>\n            <th>AnniversaryDate</th>\n            <th>Address</th>\n            <th>Phone</th>\n            <th>Email</th>\n\n\n\n\n            <th></th>\n          </tr>\n        </thead>\n        <tr *ngFor=\"let contact of contacts\">\n          <td>  {{contact.FirstName}}</td>\n          <td>{{contact.LastName}}</td>\n          <td>     {{contact.DOB}}</td>\n          <td>     {{contact.AnniversayDate}}</td>\n          <td> {{contact.Address}}</td>\n          <td>{{contact.Phone}}</td>\n          <td>    {{contact.Email}}</td>\n\n\n\n          <td>\n              \n              <a class=\"action-btn\" (click)=\"deleteAddress(contact._id)\">\n                <i class=\"material-icons\">delete</i>\n              </a>\n            </td>\n        </tr>\n      </table>\n\n\n      <router-outlet></router-outlet>\n\n\n</div>\n\n//till here --use\n\n\n<!-- \n\n<div class=\"container\" >\n    <div  *ngFor=\"let contact of contacts\">\n       \n        <div class =\"col-md-3\">\n            {{contact.FirstName}}\n        </div>\n        <div class =\"col-md-3\">\n            {{contact.LastName}}\n        </div>\n        <div class =\"col-md-3\">\n            {{contact.DOB}}\n        </div>\n        <div class =\"col-md-3\">\n            {{contact.AnniversayDate}}\n        </div>\n        <div class =\"col-md-3\">\n            {{contact.Address}}\n        </div>\n        <div class =\"col-md-3\">\n            {{contact.Phone}}\n        </div>\n        <div class =\"col-md-3\">\n            {{contact.Email}}\n        </div>\n        <div class =\"col-md-3\">\n           <input type=\"button\" (click)=\"deleteAddress(contact._id)\"  value=\"Delete\" class='btn btn-danger'>\n           <br><br>\n        \n    </div>\n    </div>\n        </div>  -->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"container\" >\n<div class =\"form-group\">\n    <label style=\"font-size:15px;\"> Last Name</label>\n   \n</div>\n</div>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from 'src/app/shared/image.service';\n\n@Component({\n  selector: 'app-image-list',\n  templateUrl: './image-list.component.html',\n  styleUrls: ['./image-list.component.css']\n})\nexport class ImageListComponent implements OnInit {\n  \nimageList:any[];\nrawIndexArray:any [];\n\n\n  constructor( private service: ImageService) { }\n\n  ngOnInit(): void {\n\n    this.service.imageDetailList.snapshotChanges().subscribe(\n   list=>{\n        this.imageList=   list.map(item=> {return item.payload.val();});\n   this.rawIndexArray=Array.from(Array(Math.ceil((this.imageList.length+1)/3)).keys());\n\n\n\n   }\n\n    );\n\n\n  }\n\n}\n","\n<div class=\"row\" style=\"width:90rem\">\n\n<table *ngIf=\"imageList\" style=\"width:90rem\">\n\n\n    \n    <tr *ngFor=\"let i of rawIndexArray\">\n\n\n        <td>\n            <div class=\"imagebox\" *ngIf=\"i==0\">\n\n                <a routerLink=\"/image/upload\">\n\n                    <!-- <img  src=\"/assets/img/birthday.jpg\"  class=\"img-fluid\"> -->\n\n                    <img src=\"https://d1eiwurxtmwbgy.cloudfront.net/images/icons/uoi.svg\" class=\"img-fluid\">\n\n                    <span style=\"color:blueviolet; font-size: 250%\" class=\"imagebox-desc\">Insert New Image</span>\n\n                </a>\n            </div>\n\n            <div class=\"imagebox\" *ngIf=\"i!=0\">\n                <img [src]=\"imageList[3*i-1].imageUrl\" class=\"img-fluid\">\n                <span class=\"imagebox-desc\"> {{imageList[3*i-1].caption}} </span>\n            </div>\n        </td>\n\n        <td *ngIf=\"imageList[3*i]\">\n            <div class=\"imagebox\">\n                <img [src]=\"imageList[3*i].imageUrl\" class=\"img-fluid\">\n                <span class=\"imagebox-desc\">\n                    {{imageList[3*i].caption}}\n                </span>\n            </div>\n\n        </td>\n\n\n        <td *ngIf=\"imageList[3*i+1]\">\n\n            <div class=\"imagebox\">\n                <img [src]=\"imageList[3*i+1].imageUrl\" class=\"img-fluid\">\n                <span class=\"imagebox-desc\">\n                    {{imageList[3*i+1].caption}}\n                </span>\n            </div>\n        </td>\n\n    </tr>\n\n</table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { finalize } from 'rxjs/operators';\nimport { ImageService } from 'src/app/shared/image.service';\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.css']\n})\nexport class ImageComponent implements OnInit {\nimgSrc :string;\nselectedImage:any;\nisSubmitted:boolean;\nformTemplate =new FormGroup({\n  caption :new FormControl('',Validators.required),\n  category :new FormControl(''),\n  imageUrl :new FormControl('',Validators.required)\n})\n  constructor(private storage :AngularFireStorage ,private service: ImageService) { }\n  ngOnInit() {\n    this.resetForm();\n  }\n  showPreview(event:any){\nif(event.target.files && event.target.files[0]){\nconst reader=new FileReader();\nreader.onload=(e:any)=>this.imgSrc=e.target.result;\nreader.readAsDataURL(event.target.files[0]);\nthis.selectedImage=event.target.files[0];\n  }\n  else{\n\n this.imgSrc='/assets/img/upload.jpg';\n\n\nthis.selectedImage=null;\n  }\n}\nonSubmit(formValue)\n{\nthis.isSubmitted=true;\nif(this.formTemplate.valid)\n{\nvar filePath=`${formValue.category}/${this.selectedImage.name.split('.').splice(0,-1).join('.')}_${new Date().getTime()}`;\nconst fileRef=this.storage.ref(filePath);\nthis.storage.upload(filePath,this.selectedImage).snapshotChanges().pipe(\nfinalize(()=> {\n  fileRef.getDownloadURL().subscribe((url)=>{\n    formValue['imageUrl'] =url;\n    this.service.insertImageDetails(formValue);\n    this.resetForm();\n  })\n})\n).subscribe();\n}\n}\nget formControls()\n{\n  return this.formTemplate['controls'];\n}\nresetForm()\n{\n  this.formTemplate.reset();\n  this.formTemplate.setValue({\ncaption:'',\nimageUrl:'',\ncategory:'Animal'\n  });\nthis.imgSrc='/assets/img/upload.jpg';\nthis.selectedImage=null;\nthis.isSubmitted=false;\n}\n}","<div class =\"card\" style=\"width:80rem\">\n\n<div class=\"ard-body\">\n<form [formGroup]=\"formTemplate\" (submit)=\"onSubmit(formTemplate.value)\">\n<div text-center=\"\">\n\n    <img [src]=\"imgSrc\" width=\"250px\"  height=\"250px\"  (click)=\"fileUploader.click()\">\n\n</div>\n\n   \n\n<div class=\"form-group\">\n\n\n<label style=\"font-size:15px;\">Select File to Upload</label>\n\n<input type=\"file\" accept=\"image/*\" class=\"form-control\" #fileUploader formControlName=\"imageUrl\"  (change)=\"showPreview($event)\">\n\n<div class=\"text-danger\"  *ngIf=\"isSubmitted && formControls.imageUrl.errors?.required\">This Field is required</div>\n\n\n\n</div>\n\n\n<div class=\"form-group\">\n\n<input  class=\"form-control\" formControlName=\"caption\" placeholder=\"Caption\">\n\n\n<div class=\"text-danger\"  *ngIf=\"isSubmitted && formControls.caption.errors?.required\">This Field is required</div>\n\n</div>\n\n\n<div class=\"form-group\">\n\n<select formControlName=\"category\" class=\"form-control\">\n\n<option value=\"Animal\" >Animal</option>\n\n\n<option value=\"Vehicle\">Vehicle</option>\n\n<option value=\"Bird\">Bird</option>\n</select>\n\n</div>\n\n<div class=\"form-row\">\n\n<div class=\"form-group col-md-6\">\n\n    <a routerLink=\"/image/list\" class=\"btn btn-primary btn-block float-right\">Go To Gallery</a>\n\n</div>\n\n<div class=\"form-group col-md-6\">\n\n<button type=\"submit\" class=\"btn btn-success btn-block float-right\"> Submit</button>\n\n</div>\n\n\n</div>\n\n</form>\n\n\n</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ImageService} from '../shared/image.service';\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.component.html',\n  styleUrls: ['./images.component.css']\n})\nexport class ImagesComponent implements OnInit {\n\n  constructor(private service: ImageService ) { }\n\n  ngOnInit() {\n\n  this.service.getImageDetailList();\n\n  }\n\n}\n","<div class=\"row\" style=\"width:120rem\">\n\n  <div class=\"col-md-8 offset-md-2\" style=\"width:120rem\">\n\n    <blockquote class=\"blockquote\">\n\n      <p style=\"background-color:#792c97 ;color:#000000;\" class=\"mb-0 h3 display-4\">Image Gallery</p>\n\n      <footer style=\"background-color:#792c97 ; color:#000000;\" class=\"blockquote-footer\">with <cite title=\"Source Title\">FireBase Storage\n        \n      </cite> and <cite title=\"Source Title\">Angular 2</cite></footer>\n\n    </blockquote>\n\n\n\n    <router-outlet></router-outlet>\n\n\n\n  </div>\n\n\n</div>","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\n//import { HttpClient } from '@angular/common/http';\nimport {Observable}  from 'rxjs/Observable';\n// import { Contact } from './contact';\nimport 'rxjs/add/operator/map';\nimport { map } from 'rxjs/operators';\n\nimport { Contact } from 'src/app/shared/contact';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  \n  contact: Contact;\n\n  contacts: Contact[];\n   \n\n  constructor(private http: Http) { }\n  // constructor(private httpClient: HttpClient) { }\n\n  // //earlier working\n  // //retreiving addressservice\n  // getAddress() {\n  \n  //   //return this.http.get('http://localhost:4112/api/getAddress').pipe(map(res => res.json()));\n  //   return this.http.get('api/getAddress').pipe(map(res => res.json()));\n\n   \n  // }\n  \n\n  getAddress() {\n    //return this.http.get('http://localhost:4112/api/getAddress').pipe(map(res => res.json()));\n    return this.http.get('api/getAddress').pipe(map(res => res.json()));\n  }\n\n\n\n\n\n\n\n  //earlier working\n  // //add address method\n  // addAddress(newContact) {\n  //   var headers = new Headers({ 'Content-Type': 'application/json' });\n  //  // return this.http.post('http://localhost:4112/api/getAddress', newContact, { headers: headers })\n  //   return this.http.post('api/getAddress', newContact, { headers: headers })\n  //     .pipe(map(res => res.json()));\n  // }\n\n\n  //added newly\n\n  postAddress(emp: Contact) {\n    //return this.http.post('http://localhost:4112/api/getAddress', emp).pipe(map(res => res.json()));\n\n    return this.http.post('api/getAddress', emp).pipe(map(res => res.json()));\n  \n  }\n\n\n  //old\n  //delete address\n  deleteAddress(id) {\n   \n  //  return this.http.delete('http://localhost:4112/api/getAddress/' + id).pipe(map(res => res.json()));\n   \n     return this.http.delete('api/getAddress/' + id).pipe(map(res => res.json()));\n  }\n\n// //edit address\n\n//   //added newly\n   putAddress(emp: Contact) {\n   \n   // return this.http.put('http://localhost:4112/api/updateAddress' + `/${emp._id}`,emp).pipe(map(res => res.json()));\n\n     return this.http.put('api/updateAddress' + `/${emp._id}`, emp).pipe(map(res => res.json()));\n \n  }\n\n\n\n\n}","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n\nimageDetailList:AngularFireList<any>;\n\n  constructor(private firebase:AngularFireDatabase) { }\n\n\ngetImageDetailList()\n{\nthis.imageDetailList = this.firebase.list('imageDetails');\n\n}\n\n\ninsertImageDetails(imageDetails)\n{\n\n  this.imageDetailList.push(imageDetails);\n\n\n\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n\n  firebaseConfig : {\n    apiKey: \"AIzaSyAV161jxcUs0wXlE9HQT1bFThg8civcJtY\",\n    authDomain: \"angular-image-gallery-c7853.firebaseapp.com\",\n    databaseURL: \"https://angular-image-gallery-c7853.firebaseio.com\",\n    projectId: \"angular-image-gallery-c7853\",\n    storageBucket: \"angular-image-gallery-c7853.appspot.com\",\n    messagingSenderId: \"492002996961\",\n    appId: \"1:492002996961:web:e561d39f836722fb5cbda0\",\n    measurementId: \"G-D68Z1Q463Y\"\n  }\n  \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}